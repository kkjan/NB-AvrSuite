/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.kkjanius.avrsuite.avrdude.ui.avrdudeoptions;

import java.io.*;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.openide.util.NbPreferences;
import org.kkjanius.avrsuite.avrdude.ImplAvrProjectProgrammer.AvrDudeProfile;
import org.kkjanius.avrsuite.avrdude.ImplAvrProjectProgrammer.AvrDudeProfiles;
import org.kkjanius.avrsuite.avrdude.ImplAvrProjectProgrammer.PrgmHW;
import org.kkjanius.avrsuite.avrdude.configfile.ParseConfigFile;
import org.openide.util.Exceptions;
import org.openide.util.lookup.InstanceContent;

final class AvrDudePanel extends javax.swing.JPanel {

    private final AvrdudePanelController controller;
    private final DefaultListModel listModel = new DefaultListModel();
    private final ListSelectionModel selModel;
    private final List<String> profiles = new ArrayList<String>();
    private final InstanceContent content = new InstanceContent();

    AvrDudePanel(AvrdudePanelController controller) {
        this.controller = controller;
        initComponents();

        selModel = jListProfile.getSelectionModel();
        selModel.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    AvrDudeProfile prgmProfile = new AvrDudeProfile((String) jListProfile.getSelectedValue());
                    jTextFieldName.setText(prgmProfile.getName());
                    AvrDudeExecTextField.setText(prgmProfile.getExecLocation());
                    AvrDudeConfTextField.setText(prgmProfile.getConfPath());

                    jTextFieldPort.setText(prgmProfile.getPort());
                    jComboBoxBaudrate.setSelectedItem(prgmProfile.getBaudRate());
                    jTextFieldBitClock.setText(prgmProfile.getBitclock());
                    jExtra.setText(prgmProfile.getExtraParams());
                    jTextFieldDelay.setText(prgmProfile.getDelay());
                    VerifyCheckCheckBox.setSelected(prgmProfile.getVerifyCheckDis());
                    SignatureCheckCheckBox.setSelected(prgmProfile.getSignCheckDis());
                    SimulationCheckBox.setSelected(prgmProfile.getSimulationMode());
                    InhibitEraseCheckBox.setSelected(prgmProfile.getAutoEraseFlashDis());

                    update_prgm();

                    PrgmHW prgm = PrgmHW.getInstance().getProgrammer(prgmProfile.getProgrammer(), prgmProfile.getConfPath());
                    jComboBoxProgrammer.getModel().setSelectedItem(prgm);
                    jComboBoxProgrammer.setSelectedItem(jComboBoxProgrammer.getModel().getSelectedItem());

                    update();

                }
            }
        });
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabelProfileName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelProgrammer = new javax.swing.JLabel();
        jLabelPort = new javax.swing.JLabel();
        jTextFieldPort = new javax.swing.JTextField();
        jComboBoxProgrammer = new javax.swing.JComboBox();
        AvrDudeExecTextField = new javax.swing.JTextField();
        jLabelExecLocale = new javax.swing.JLabel();
        AvrdudeExecFileBrowseButton = new javax.swing.JButton();
        AvrdudeConfFileBrowseButton = new javax.swing.JButton();
        AvrDudeConfTextField = new javax.swing.JTextField();
        jLabelConfLocale = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelBaudrate = new javax.swing.JLabel();
        jComboBoxBaudrate = new javax.swing.JComboBox();
        jLabelBitLock = new javax.swing.JLabel();
        jTextFieldBitClock = new javax.swing.JTextField();
        jLabelDelay = new javax.swing.JLabel();
        jTextFieldDelay = new javax.swing.JTextField();
        jLabelExtraParams = new javax.swing.JLabel();
        jExtra = new javax.swing.JTextField();
        jLabelInfo = new javax.swing.JLabel();
        jLabelInfo1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        VerifyCheckCheckBox = new javax.swing.JCheckBox();
        SignatureCheckCheckBox = new javax.swing.JCheckBox();
        SimulationCheckBox = new javax.swing.JCheckBox();
        InhibitEraseCheckBox = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListProfile = new javax.swing.JList(listModel);
        jLabel1 = new javax.swing.JLabel();
        jButtonAddProfile = new javax.swing.JButton();
        javax.swing.JButton jButtonRemove = new javax.swing.JButton();
        jLabelPreview = new javax.swing.JLabel();
        jpreview = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaMessage = new javax.swing.JTextArea();

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jButton1.text")); // NOI18N

        setPreferredSize(new java.awt.Dimension(950, 543));

        org.openide.awt.Mnemonics.setLocalizedText(jLabelProfileName, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelProfileName.text")); // NOI18N

        jTextFieldName.setText(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jTextFieldName.text")); // NOI18N

        jLabelProgrammer.setLabelFor(jComboBoxProgrammer);
        org.openide.awt.Mnemonics.setLocalizedText(jLabelProgrammer, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelProgrammer.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabelPort, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelPort.text")); // NOI18N

        jTextFieldPort.setText(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jTextFieldPort.text")); // NOI18N
        jTextFieldPort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPortActionPerformed(evt);
            }
        });

        jComboBoxProgrammer.setMaximumSize(new java.awt.Dimension(32, 24));
        jComboBoxProgrammer.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxProgrammerItemStateChanged(evt);
            }
        });

        AvrDudeExecTextField.setEditable(false);
        AvrDudeExecTextField.setText(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.AvrDudeExecTextField.text")); // NOI18N
        AvrDudeExecTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvrDudeExecTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabelExecLocale, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelExecLocale.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(AvrdudeExecFileBrowseButton, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.AvrdudeExecFileBrowseButton.text")); // NOI18N
        AvrdudeExecFileBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvrdudeExecFileBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(AvrdudeConfFileBrowseButton, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.AvrdudeConfFileBrowseButton.text")); // NOI18N
        AvrdudeConfFileBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvrdudeConfFileBrowseButtonActionPerformed(evt);
            }
        });

        AvrDudeConfTextField.setEditable(false);
        AvrDudeConfTextField.setText(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.AvrDudeConfTextField.text")); // NOI18N
        AvrDudeConfTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AvrDudeConfTextFieldActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabelConfLocale, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelConfLocale.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelPort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldPort))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelProfileName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldName))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelProgrammer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxProgrammer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AvrDudeConfTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                            .addComponent(AvrDudeExecTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AvrdudeConfFileBrowseButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AvrdudeExecFileBrowseButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelExecLocale)
                            .addComponent(jLabelConfLocale))
                        .addGap(0, 311, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelProfileName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelExecLocale)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AvrDudeExecTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AvrdudeExecFileBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelConfLocale)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AvrDudeConfTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AvrdudeConfFileBrowseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelProgrammer)
                    .addComponent(jComboBoxProgrammer, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPort))
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {AvrDudeConfTextField, AvrDudeExecTextField, AvrdudeConfFileBrowseButton, AvrdudeExecFileBrowseButton, jComboBoxProgrammer, jLabelConfLocale, jLabelExecLocale, jLabelPort, jLabelProfileName, jLabelProgrammer, jTextFieldName, jTextFieldPort});

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jLabelBaudrate.setLabelFor(jComboBoxBaudrate);
        org.openide.awt.Mnemonics.setLocalizedText(jLabelBaudrate, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelBaudrate.text")); // NOI18N

        jComboBoxBaudrate.setEditable(true);
        jComboBoxBaudrate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "        75", "      110", "      134", "      150", "      300", "      600", "    1200", "    1800", "    2400", "    4800", "    7200", "    9600", "  14400", "  19200", "  38400", "  57600", "115200", "128000", "230400" }));
        jComboBoxBaudrate.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBaudrateItemStateChanged(evt);
            }
        });

        jLabelBitLock.setLabelFor(jTextFieldBitClock);
        org.openide.awt.Mnemonics.setLocalizedText(jLabelBitLock, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelBitLock.text")); // NOI18N

        jTextFieldBitClock.setText(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jTextFieldBitClock.text")); // NOI18N
        jTextFieldBitClock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBitClockActionPerformed(evt);
            }
        });

        jLabelDelay.setLabelFor(jTextFieldDelay);
        org.openide.awt.Mnemonics.setLocalizedText(jLabelDelay, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelDelay.text")); // NOI18N

        jTextFieldDelay.setText(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jTextFieldDelay.text")); // NOI18N
        jTextFieldDelay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelayActionPerformed(evt);
            }
        });

        jLabelExtraParams.setLabelFor(jTextFieldBitClock);
        org.openide.awt.Mnemonics.setLocalizedText(jLabelExtraParams, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelExtraParams.text")); // NOI18N

        jExtra.setText(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jExtra.text")); // NOI18N
        jExtra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExtraActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabelInfo, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelInfo.text")); // NOI18N

        jLabelInfo1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabelInfo1, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelInfo1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabel2.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabel3.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(VerifyCheckCheckBox, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.VerifyCheckCheckBox.text")); // NOI18N
        VerifyCheckCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                VerifyCheckCheckBoxItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(SignatureCheckCheckBox, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.SignatureCheckCheckBox.text")); // NOI18N
        SignatureCheckCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SignatureCheckCheckBoxItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(SimulationCheckBox, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.SimulationCheckBox.text")); // NOI18N
        SimulationCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SimulationCheckBoxItemStateChanged(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(InhibitEraseCheckBox, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.InhibitEraseCheckBox.text")); // NOI18N
        InhibitEraseCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                InhibitEraseCheckBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelInfo1)
                            .addComponent(VerifyCheckCheckBox)
                            .addComponent(SignatureCheckCheckBox)
                            .addComponent(SimulationCheckBox)
                            .addComponent(InhibitEraseCheckBox))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabelInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 569, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabelExtraParams)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jExtra))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabelBaudrate)
                                        .addGap(6, 6, 6)
                                        .addComponent(jComboBoxBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabelBitLock)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldBitClock))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabelDelay)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextFieldDelay)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabelInfo1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBaudrate)
                    .addComponent(jComboBoxBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBitLock)
                    .addComponent(jTextFieldBitClock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDelay)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VerifyCheckCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SignatureCheckCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SimulationCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(InhibitEraseCheckBox)
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jExtra, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelExtraParams))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabelInfo)
                .addGap(188, 188, 188))
        );

        jTabbedPane1.addTab(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        jListProfile.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jListProfile);

        jLabel1.setLabelFor(jListProfile);
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabel1.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButtonAddProfile, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jButtonAddProfile.text")); // NOI18N
        jButtonAddProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddProfileActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jButtonRemove, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jButtonRemove.text")); // NOI18N
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jLabelPreview.setLabelFor(jpreview);
        org.openide.awt.Mnemonics.setLocalizedText(jLabelPreview, org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jLabelPreview.text")); // NOI18N

        jpreview.setEditable(false);
        jpreview.setText(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jpreview.text")); // NOI18N

        jTextAreaMessage.setBackground(new java.awt.Color(238, 238, 238));
        jTextAreaMessage.setColumns(20);
        jTextAreaMessage.setForeground(new java.awt.Color(255, 0, 0));
        jTextAreaMessage.setRows(5);
        jTextAreaMessage.setBorder(null);
        jScrollPane2.setViewportView(jTextAreaMessage);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonAddProfile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRemove)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelPreview)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpreview)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRemove)
                            .addComponent(jButtonAddProfile))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jpreview, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPreview))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName(org.openide.util.NbBundle.getMessage(AvrDudePanel.class, "AvrDudePanel.jTabbedPane1.AccessibleContext.accessibleName")); // NOI18N
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddProfileActionPerformed
        // TODO add your handling code here:
        PrgmHW prgms;
        prgms = (PrgmHW) jComboBoxProgrammer.getSelectedItem();
        AvrDudeProfile prgm = new AvrDudeProfile(
                jTextFieldName.getText(),
                AvrDudeExecTextField.getText(),
                AvrDudeConfTextField.getText(),
                prgms.getPrgmID(),
                jTextFieldPort.getText(),
                jComboBoxBaudrate.getSelectedItem().toString(),
                jTextFieldBitClock.getText(),
                jTextFieldDelay.getText(),
                jTextFieldBitClock.getText(),
                VerifyCheckCheckBox.isSelected(),
                SignatureCheckCheckBox.isSelected(),
                SimulationCheckBox.isSelected(),
                InhibitEraseCheckBox.isSelected());

        prgm.StoreOptions(jTextFieldName.getText());
        int pos = jListProfile.getModel().getSize();
        if (!listModel.contains(jTextFieldName.getText())) {
            listModel.add(pos, jTextFieldName.getText());
        }
        update();

        try {

            String OutPath = System.getProperty("netbeans.user") + "/config/Preferences" + NbPreferences.forModule(AvrDudeProfile.class).absolutePath() + "/mcu" + jTextFieldName.getText() + ".xml";
            ParseConfigFile.AvrDudeConf2XMl(prgm.getConfPath(), OutPath);
        } catch (FileNotFoundException ex) {
            Exceptions.printStackTrace(ex);
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        controller.changed();
        controller.update();


    }//GEN-LAST:event_jButtonAddProfileActionPerformed

    private void AvrDudeExecTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvrDudeExecTextFieldActionPerformed
        update_prgm();

    }//GEN-LAST:event_AvrDudeExecTextFieldActionPerformed

    private void AvrdudeExecFileBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvrdudeExecFileBrowseButtonActionPerformed

        JFileChooser chooser = new JFileChooser();

        chooser.setDialogTitle("Select Avrdude Executable Location");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = chooser.showOpenDialog(AvrDudePanel.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File AvrDudeExecFile = chooser.getSelectedFile();
            AvrDudeExecTextField.setText(AvrDudeExecFile.getPath());
            update_prgm();

        }
    }//GEN-LAST:event_AvrdudeExecFileBrowseButtonActionPerformed

    private void AvrdudeConfFileBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvrdudeConfFileBrowseButtonActionPerformed
        JFileChooser chooser = new JFileChooser();

        chooser.setDialogTitle("Select Avrdude Configuration file Location");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int returnVal = chooser.showOpenDialog(AvrDudePanel.this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File AvrDudeConfFile = chooser.getSelectedFile();

            AvrDudeConfTextField.setText(AvrDudeConfFile.getPath());
            update_prgm();

        }

    }//GEN-LAST:event_AvrdudeConfFileBrowseButtonActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        String remProf;
        remProf = (String) jListProfile.getSelectedValue();
        AvrDudeProfiles.DeleteOptions(remProf);
        listModel.removeElement(remProf);
        controller.changed();
        controller.update();
        profiles.clear();
        for (int i = 0; i < listModel.getSize(); i++) {
            profiles.add(listModel.getElementAt(i).toString());
        }

    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jTextFieldPortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPortActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_jTextFieldPortActionPerformed

    private void jComboBoxBaudrateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBaudrateItemStateChanged
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_jComboBoxBaudrateItemStateChanged

    private void jTextFieldBitClockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBitClockActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_jTextFieldBitClockActionPerformed

    private void jTextFieldDelayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelayActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_jTextFieldDelayActionPerformed

    private void jExtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExtraActionPerformed
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_jExtraActionPerformed

    private void VerifyCheckCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_VerifyCheckCheckBoxItemStateChanged
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_VerifyCheckCheckBoxItemStateChanged

    private void SignatureCheckCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SignatureCheckCheckBoxItemStateChanged
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_SignatureCheckCheckBoxItemStateChanged

    private void SimulationCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SimulationCheckBoxItemStateChanged
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_SimulationCheckBoxItemStateChanged

    private void InhibitEraseCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_InhibitEraseCheckBoxItemStateChanged
        // TODO add your handling code here:
        update();
    }//GEN-LAST:event_InhibitEraseCheckBoxItemStateChanged

    private void jComboBoxProgrammerItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxProgrammerItemStateChanged
        // TODO add your handling code here:
        //   update();
    }//GEN-LAST:event_jComboBoxProgrammerItemStateChanged

    private void AvrDudeConfTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AvrDudeConfTextFieldActionPerformed

        update_prgm();
    }//GEN-LAST:event_AvrDudeConfTextFieldActionPerformed

    private void update() {
        PrgmHW prgms;
        String prgmID = "";

        if (jComboBoxProgrammer.getItemCount() > 0) {
            prgms = (PrgmHW) jComboBoxProgrammer.getSelectedItem();
            prgmID = prgms.getPrgmID();
        }
        AvrDudeProfile prgm = new AvrDudeProfile(
                jTextFieldName.getText(),
                AvrDudeExecTextField.getText(),
                AvrDudeConfTextField.getText(),
                prgmID,
                jTextFieldPort.getText(),
                jComboBoxBaudrate.getSelectedItem().toString().replaceAll(" ", ""),
                jTextFieldBitClock.getText(),
                jTextFieldDelay.getText(),
                jExtra.getText(),
                VerifyCheckCheckBox.isSelected(),
                SignatureCheckCheckBox.isSelected(),
                SimulationCheckBox.isSelected(),
                InhibitEraseCheckBox.isSelected());

        jpreview.setText(prgm.getUploadCmd("{FILE}"));
    }

    private void update_prgm() {
        File fileexec = new File(AvrDudeExecTextField.getText());
        File fileconf = new File(AvrDudeConfTextField.getText());

        if (fileexec.exists() && fileconf.exists()) {

            List<PrgmHW> PrgmHWList = PrgmHW.getInstance().getProgrammerList(AvrDudeExecTextField.getText(), AvrDudeConfTextField.getText());
            if (jComboBoxProgrammer.getItemCount() > 0) {
                jComboBoxProgrammer.removeAllItems();
            }
            jComboBoxProgrammer.addItem(new PrgmHW(" ", " "));
            for (PrgmHW prgmHW : PrgmHWList) {
                jComboBoxProgrammer.addItem(prgmHW);

            }
        } else {
            jComboBoxProgrammer.removeAllItems();
        }
        if (!fileexec.exists()) {
        }

        if (!fileconf.exists()) {
        }
    }

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(AvrDudePanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(AvrDudePanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
        listModel.removeAllElements();
        List<String> Profiles;
        Profiles = AvrDudeProfiles.getAllProfiles();
        for (String profile : Profiles) {
            listModel.addElement(profile);
        }

    }

    void store() {
        // TODO store modified settings
        // Example:
        // Preferences.userNodeForPackage(AvrDudePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or for org.openide.util with API spec. version >= 7.4:
        // NbPreferences.forModule(AvrDudePanel.class).putBoolean("someFlag", someCheckBox.isSelected());
        // or:
        // SomeSystemOption.getDefault().setSomeStringProperty(someTextField.getText());
        if (jTextFieldName.getText().length() > 0) {
            AvrDudeProfile prgm = new AvrDudeProfile(
                    jTextFieldName.getText(),
                    AvrDudeExecTextField.getText(),
                    AvrDudeConfTextField.getText(),
                    jComboBoxProgrammer.getSelectedItem().toString().substring(0, jComboBoxProgrammer.getSelectedItem().toString().indexOf(":")),
                    jTextFieldPort.getText(),
                    jComboBoxBaudrate.getSelectedItem().toString(),
                    jTextFieldBitClock.getText(),
                    jTextFieldDelay.getText(),
                    jTextFieldBitClock.getText(),
                    VerifyCheckCheckBox.isSelected(),
                    SignatureCheckCheckBox.isSelected(),
                    SimulationCheckBox.isSelected(),
                    InhibitEraseCheckBox.isSelected());

            prgm.StoreOptions(jTextFieldName.getText());
            int pos = jListProfile.getModel().getSize();
            if (!listModel.contains(jTextFieldName.getText())) {
                listModel.add(pos, jTextFieldName.getText());
            }
        }
        controller.changed();
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    public InstanceContent getProfiles() {
        return content;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AvrDudeConfTextField;
    private javax.swing.JTextField AvrDudeExecTextField;
    private javax.swing.JButton AvrdudeConfFileBrowseButton;
    private javax.swing.JButton AvrdudeExecFileBrowseButton;
    private javax.swing.JCheckBox InhibitEraseCheckBox;
    private javax.swing.JCheckBox SignatureCheckCheckBox;
    private javax.swing.JCheckBox SimulationCheckBox;
    private javax.swing.JCheckBox VerifyCheckCheckBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddProfile;
    private javax.swing.JComboBox jComboBoxBaudrate;
    private javax.swing.JComboBox jComboBoxProgrammer;
    private javax.swing.JTextField jExtra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelBaudrate;
    private javax.swing.JLabel jLabelBitLock;
    private javax.swing.JLabel jLabelConfLocale;
    private javax.swing.JLabel jLabelDelay;
    private javax.swing.JLabel jLabelExecLocale;
    private javax.swing.JLabel jLabelExtraParams;
    private javax.swing.JLabel jLabelInfo;
    private javax.swing.JLabel jLabelInfo1;
    private javax.swing.JLabel jLabelPort;
    private javax.swing.JLabel jLabelPreview;
    private javax.swing.JLabel jLabelProfileName;
    private javax.swing.JLabel jLabelProgrammer;
    private javax.swing.JList jListProfile;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaMessage;
    private javax.swing.JTextField jTextFieldBitClock;
    private javax.swing.JTextField jTextFieldDelay;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPort;
    private javax.swing.JTextField jpreview;
    // End of variables declaration//GEN-END:variables
}
